# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rabbitMQ.proto

require 'google/protobuf'

require 'google/protobuf/empty_pb'
require 'google/protobuf/any_pb'
require 'generic_pb'
require 'microserviceCommunication_pb'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("rabbitMQ.proto", :syntax => :proto3) do
    add_message "dynamos.InitRequest" do
      optional :service_name, :string, 1
      optional :routing_key, :string, 2
      optional :queue_auto_delete, :bool, 3
    end
    add_message "dynamos.ChainRequest" do
      optional :service_name, :string, 1
      optional :routing_key, :string, 2
      optional :queue_auto_delete, :bool, 3
      optional :port, :uint32, 4
    end
    add_message "dynamos.StopRequest" do
    end
    add_message "dynamos.QueueInfo" do
      optional :queue_name, :string, 1
      optional :auto_delete, :bool, 2
      optional :user_name, :string, 3
      optional :job_name, :string, 4
    end
    add_message "dynamos.ConsumeRequest" do
      optional :queue_name, :string, 1
      optional :auto_ack, :bool, 2
    end
    add_message "dynamos.SideCarMessage" do
      optional :type, :string, 1
      optional :body, :message, 2, "google.protobuf.Any"
      map :traces, :string, :bytes, 3
    end
    add_message "dynamos.Auth" do
      optional :access_token, :string, 1
      optional :refresh_token, :string, 2
    end
    add_message "dynamos.DataProvider" do
      repeated :archetypes, :string, 1
      repeated :compute_providers, :string, 2
    end
    add_message "dynamos.UserAllowedArchetypes" do
      repeated :archetypes, :string, 1
    end
    add_message "dynamos.UserArchetypes" do
      optional :user_name, :string, 1
      map :archetypes, :string, :message, 2, "dynamos.UserAllowedArchetypes"
    end
    add_message "dynamos.ValidationResponse" do
      optional :type, :string, 1
      optional :request_type, :string, 2
      map :valid_dataproviders, :string, :message, 3, "dynamos.DataProvider"
      repeated :invalid_dataproviders, :string, 4
      optional :auth, :message, 5, "dynamos.Auth"
      optional :user, :message, 6, "dynamos.User"
      optional :request_approved, :bool, 7
      optional :valid_archetypes, :message, 8, "dynamos.UserArchetypes"
      map :options, :string, :bool, 9
    end
    add_message "dynamos.User" do
      optional :id, :string, 1
      optional :user_name, :string, 2
    end
    add_message "dynamos.RequestApproval" do
      optional :type, :string, 1
      optional :user, :message, 2, "dynamos.User"
      repeated :data_providers, :string, 3
      optional :destination_queue, :string, 4
      map :options, :string, :bool, 5
    end
    add_message "dynamos.RequestApprovalResponse" do
      optional :type, :string, 1
      optional :user, :message, 2, "dynamos.User"
      optional :auth, :message, 3, "dynamos.Auth"
      map :authorized_providers, :string, :string, 4
      optional :job_id, :string, 5
      optional :error, :string, 6
      optional :request_metadata, :message, 7, "dynamos.RequestMetadata"
    end
    add_message "dynamos.PolicyUpdate" do
      optional :type, :string, 1
      optional :user, :message, 2, "dynamos.User"
      repeated :data_providers, :string, 3
      optional :request_metadata, :message, 4, "dynamos.RequestMetadata"
      optional :validation_response, :message, 5, "dynamos.ValidationResponse"
    end
    add_message "dynamos.CompositionRequest" do
      optional :archetype_id, :string, 1
      optional :request_type, :string, 2
      optional :role, :string, 3
      optional :user, :message, 4, "dynamos.User"
      repeated :data_providers, :string, 5
      optional :destination_queue, :string, 6
      optional :job_name, :string, 7
      optional :local_job_name, :string, 8
    end
    add_message "dynamos.SqlDataRequest" do
      optional :type, :string, 1
      optional :query, :string, 2
      optional :algorithm, :string, 3
      map :algorithm_columns, :string, :string, 4
      optional :user, :message, 5, "dynamos.User"
      optional :request_metadata, :message, 6, "dynamos.RequestMetadata"
      map :options, :string, :bool, 7
    end
  end
end

module Dynamos
  InitRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dynamos.InitRequest").msgclass
  ChainRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dynamos.ChainRequest").msgclass
  StopRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dynamos.StopRequest").msgclass
  QueueInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dynamos.QueueInfo").msgclass
  ConsumeRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dynamos.ConsumeRequest").msgclass
  SideCarMessage = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dynamos.SideCarMessage").msgclass
  Auth = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dynamos.Auth").msgclass
  DataProvider = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dynamos.DataProvider").msgclass
  UserAllowedArchetypes = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dynamos.UserAllowedArchetypes").msgclass
  UserArchetypes = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dynamos.UserArchetypes").msgclass
  ValidationResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dynamos.ValidationResponse").msgclass
  User = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dynamos.User").msgclass
  RequestApproval = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dynamos.RequestApproval").msgclass
  RequestApprovalResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dynamos.RequestApprovalResponse").msgclass
  PolicyUpdate = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dynamos.PolicyUpdate").msgclass
  CompositionRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dynamos.CompositionRequest").msgclass
  SqlDataRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dynamos.SqlDataRequest").msgclass
end
